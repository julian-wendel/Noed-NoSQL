@import "animate.css";
@import "variables";
@import "mixins";
@import "material-icons";

body {
  background-color: $lightgray;
  -webkit-font-smoothing: antialiased;
  // Support for Safari and Chrome
  text-rendering: optimizeLegibility;

  // Support for Firefox
  -moz-osx-font-smoothing: grayscale;

  // Support for IE
  font-feature-settings: 'liga';
}

* { outline: 0; }
.full-width { width: 100%; }
.m-0 { margin: 0; }
.m-t-0 { margin-top: 0; }
.m-r-0 { margin-right: 0; }
.m-b-0 { margin-bottom: 0; }
.m-l-0 { margin-left: 0; }

.stroke-through {
  color: $gray;
  text-decoration: line-through;
}

// ------------- View animation
// ------------------------------
.slide-left-right {
  &.ng-enter, &.ng-leave { @include transition(transform, $transition-duration, cubic-bezier(0.550, 0.055, 0.675, 0.190)); }
  &.ng-enter { @include transform(translate3d(100%, 0, 0)); }
  &.ng-enter.ng-enter-active { @include transform(translate3d(0, 0, 0)); }
  &.ng-leave { @include transform(translate3d(0, 0, 0)); }
  &.ng-leave.ng-leave-active { @include transform(translate3d(-100%, 0, 0)); }
}

.scaleIn, .scaleOut {
  &.ng-enter,
  &.ng-leave {
	@include transition(transform opacity, $transition-duration, cubic-bezier(0.550, 0.055, 0.675, 0.190));
  }
}
.scaleIn {
  &.ng-enter {
	@include transparency(0, 0);
	@include transform(scale(0));
  }
  &.ng-enter.ng-enter-active {
	@include transparency(1, 100);
	@include transform(scale(1));
  }
}

.scaleOut {
  &.ng-leave {
	@include transparency(1, 100);
	@include transform(scale(1));
  }
  &.ng-leave.ng-leave-active {
	@include transparency(0, 0);
	@include transform(scale(0));
  }
}

// ----------- Rotations
// -----------------------------
$rotations: (45, 180, 360);
.rotate {
  @include transition(transform, $transition-duration, $ease-out-expo);

  @each $key in $rotations {
	&-#{$key} {
	  &.on { @include transform(rotate(#{$key}deg)); }
	  &.off { @include transform(rotate(0deg)); }
	}
  }
}

// ----------- color list
// -----------------------------

$colorList: (
	'amber': $amber,
	'black': $black,
	'blue': $blue,
	'darkgray': $darkgray,
	'gray': $gray,
	'green': $green,
	'lightblue': $lightblue,
	'lightgray': $lightgray,
	'lightyellow': $lightyellow,
	'purple': $purple,
	'red': $red,
	'white': $white,
	'yellow': $yellow,
);

@each $key in $colorList {
  $name: nth($key, 1);
  $color: nth($key, 2);
  .#{$name} {
	color: $color !important;
	&-text { color: $color !important; }
	&-border { border-color: $color !important; }
	&-background { background-color: $color !important; }
  }
}

md-sidenav, md-backdrop {
  position: fixed;
}

// ----------- login
// -----------------------------
#login-container {
  .brand {
	@include transform(scale(2));
	@include transition(transform, $transition-duration, $ease-out-expo);
	-webkit-transition-delay: 200ms;
	-moz-transition-delay: 200ms;
	transition-delay: 200ms;
	md-icon { font-size: 250%; }

	@media screen and (max-width: 600px) {
	  @include transform(scale(1.5));
	}
  }

  .form-container {
	background-color: $white;
	padding: 50px 20px 10px;
	width: 80%;
	min-width: 320px;
	@include border-bottom-right-radius(15px);
	@include border-top-left-radius(15px);
	@include transition(width, $transition-duration, $ease-out-expo);

	@media screen and (min-width: 414px) and (max-width: 1023px) {
	  width: 60%;
	}
	@media screen and (min-width: 1024px) {
	  width: 40%;
	}
  }
}

// -------- animations
// -------------------------
@mixin cycle($what) {
  $c: ($amber, $green * .7, $red * .8, $purple, $blue * .7, $amber);
  $i : 0;
  @for $k from 1 through length($c) {
	#{$i}% { #{$what}: nth($c, $k); }
	$i: $i + 20;
  }
}

.animate-background {
  @include animation(background-cycle, 10s, infinite $ease-out-expo);
}
.animate-color {
  @include animation(color-cycle, 10s, infinite $ease-out-expo);
}
@-webkit-keyframes background-cycle {
  @include cycle(background-color);
}
@-moz-keyframes background-cycle {
  @include cycle(background-color);
}
@keyframes background-cycle {
  @include cycle(background-color);
}

@-webkit-keyframes color-cycle {
  @include cycle(color);
}
@-moz-keyframes color-cycle {
  @include cycle(color);
}
@keyframes color-cycle {
  @include cycle(color);
}

// ----------- header
// -----------------------------

#header {
  width: 100%;
  min-width: 320px;
  margin: 10px auto 20px;
  @include transition(all, $transition-duration, $ease-out-expo);
  @include display-flex();
  @include justify-content(center);
  @include align-items(center);

  &.sticky {
	background: rgba(255, 255, 255, .9);
	@include box-shadow(0 2px 10px rgba(0,0,0,.5));
	padding: 10px 0;
	@extend .m-t-0;
	position: fixed;
	top: 0;
	z-index: 50;
  }

  nav {
	@include transition(all, $transition-duration, $ease-out-expo);
	@include transform(scale(1.3));
	.nav-menu {
	  @include display-flex();
	  @include justify-content(center);

	  &.md-fab {
		@include circle(40px);

		md-icon {
		  font-size: 200%;
		  width: auto;
		  height: auto;
		}
	  }
	}
	@media screen and (max-width: 991px) {
	  @include transform(scale(1));
	}
	@media screen and (max-width: 767px) {
	  h4 { display: none; }
	}
  }

  form {
	@include display-flex();
	@include align-items(center);

	input {
	  @include border-radius(20px);
	  border: 0;
	  font-size: 90%;
	  padding: 5px 10px;
	  line-height: 25px;
	}
	button {
	  margin-right: 0;
	  height: 15px;
	  line-height: 15px;
	  width: 30px;
	}
  }

}

// ------- color options for new list
// -----------------------------------
.color-options {
  .md-button.md-fab {
	@include circle(25px);
	padding: 0;
  }
  ul {
	li {
	  display: block;
	  cursor: pointer;
	  list-style: none;
	  @include circle(25px);
	  @include border-radius(50%);
	  margin-right: 10px;
	  &:last-child { margin-right: 0; }
	}
  }
}

#content {
  background-color: $lightgray;
  padding: 10px;
}

md-grid-list {
  //margin: 8px;

  md-grid-tile {
	@include transition(all, $transition-duration, $ease-out-expo);
	@include box-shadow(0 1px 5px rgba(0,0,0,.5));
	-webkit-transition-delay: 5ms;
	-moz-transition-delay: 5ms;
	transition-delay: 5ms;

	figure { display: block; }

	md-grid-tile-header {
	  background: none;
	  h3 {
		color: $darkgray;
		font-weight: 500;
		margin: 0 16px;
	  }
	}

	md-grid-tile-footer {
	  figcaption { @extend .full-width; }
	  .shared-list-avatar {
		@include circle(30px);
		&.md-fab {
		  background-color: rgba(0, 0, 0, .25);
		  @include box-shadow(none);
		}
		&.md-fab.md-mini { line-height: 10px; }
		md-icon {
		  font-size: 130%;
		  width: auto;
		  height: auto;
		}
	  }
	}

	.btn-delete {
	  background-color: rgba(0, 0, 0, .5);
	  cursor: pointer;
	  position: absolute;
	  top: -10px;
	  left: -8px;
	  width: 20px;
	  height: 20px;
	  @include border-radius(50%);
	  z-index: 200;
	  @include transition(all, $transition-duration, $ease-out-expo);

	  md-icon {
		font-size: 100%;
	  }
	}

	.btn-add-task {
	  position: absolute;
	  right: 0;
	  top: 0;
	  .md-button {
		margin: 0;
		md-icon { @include transparency(0.5, 50); }
	  }
	}

	// task list items
	md-list {
	  margin-top: 40px;
	  font-size: 90%;

	  &.todo-active, &.todo-inactive {
		.todos {
		  @include transition(all, $transition-duration, $ease-out-expo);

		  .md-mini {
			width: auto;
			@extend .m-0;
			md-icon {
			  color: rgba(0, 0, 0,.3);
			  font-size: 140%;
			  @include transition(all, $transition-duration, linear);
			  &:hover { color: rgba(0, 0, 0, .6); }
			}
		  }
		}
	  }
	  &.todo-active {
		.todos {
		  &.ng-enter {
			@include transparency(0, 0);
			@include transform(translate3d(0, 200%, 0));
		  }
		  &.ng-leave, &.ng-enter-active {
			@include transparency(1, 100);
			@include transform(translate3d(0, 0, 0));
		  }
		  &.ng-leave-active {
			@include transparency(0, 0);
			@include transform(translate3d(0, 200%, 0));
		  }
		}
	  }
	  &.todo-inactive {
		.todos {
		  &.ng-enter {
			@include transparency(0, 0);
			@include transform(translate3d(0, -200%, 0));
		  }
		  &.ng-leave, &.ng-enter-active {
			@include transparency(1, 100);
			@include transform(translate3d(0, 0, 0));
		  }
		  &.ng-leave-active {
			@include transparency(0, 0);
			@include transform(translate3d(0, -200%, 0));
		  }
		}

		md-list-item {
		  .md-list-item-inner > md-icon:first-child {
			margin-right: 10px;
		  }
		  &:first-child {
			button {
			  &:hover {
				background: rgba(255, 255, 255, .2);
			  }
			}
		  }
		}
	  }
	  md-list-item {
		min-height: 28px;

		&.add-task-input {
		  &.ng-enter, &.ng-leave {
			@include transition(all, $transition-duration, $ease-out-expo);
		  }
		  &.ng-enter, &.ng-leave {
			@include transparency(0, 0);
			@include transform(translate3d(0, -20px, 0));
		  }
		  &.ng-leave, &.ng-enter-active {
			@include transparency(1, 100);
			@include transform(translate3d(0, 0, 0));
		  }
		  &.ng-leave-active {
			@include transparency(0, 0);
			@include transform(translate3d(0, -20px, 0));
		  }

		  md-input-container {
			input {
			  //background: rgba(0, 0, 0, .1);
			  border-bottom-color: rgba(0, 0, 0, .3);
			  padding-right: 30px;
			  overflow: hidden;
			  //padding: 5px 30px 5px 0;
			  //&:focus { padding: 5px 0; }
			}
			button {
			  background: none;
			  border: 2px solid rgba(0, 0, 0, .5);
			  @include border-radius(50%);
			  padding: 0;
			  position: absolute;
			  top: 5px;
			  right: 0;
			  width: 20px;
			  height: 20px;
			  md-icon { font-size: 110%; }
			}
		  }
		}

		.md-list-item-inner {
		  min-height: 28px;
		  > md-checkbox:first-child { margin-right: 5px; }
		  p {
			overflow: hidden;
			text-overflow: ellipsis;
		  }
		}
	  }
	}
  }
}

.shared-list-dialog {
  md-toolbar {
	.md-toolbar-tools { font-size: 90%; }
  }
  md-list {
	md-list-item {
	  md-checkbox:first-child {
		margin-right: 10px;
	  }
	}
  }

  .list-user {
	color: $gray;
	font-size: 90%;
	md-icon {
	  color: #b2b2b2;
	  font-size: 140%;
	}
  }
}

// ----- Toast
// --------------
md-toast.md-default-theme, md-toast {
  background-color: #c65428;
}